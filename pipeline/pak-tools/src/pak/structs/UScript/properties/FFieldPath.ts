import {Reader} from "../../../../readers/Reader";
import {NameMap} from "../FName";

enum EClassFlags {
  /** No Flags */
  CLASS_None = 0x00000000,
  /** Class is abstract and can't be instantiated directly. */
  CLASS_Abstract = 0x00000001,
  /** Save object configuration only to Default INIs, never to local INIs. Must be combined with CLASS_Config */
  CLASS_DefaultConfig = 0x00000002,
  /** Load object configuration at construction time. */
  CLASS_Config = 0x00000004,
  /** This object type can't be saved; null it out at save time. */
  CLASS_Transient = 0x00000008,
  /** Successfully parsed. */
  CLASS_Parsed = 0x00000010,
  /** */
  CLASS_MatchedSerializers = 0x00000020,
  /** Indicates that the config settings for this class will be saved to Project/User*.ini (similar to CLASS_GlobalUserConfig) */
  CLASS_ProjectUserConfig = 0x00000040,
  /** Class is a native class - native interfaces will have CLASS_Native set, but not RF_MarkAsNative */
  CLASS_Native = 0x00000080,
  /** Don't export to C++ header. */
  CLASS_NoExport = 0x00000100,
  /** Do not allow users to create in the editor. */
  CLASS_NotPlaceable = 0x00000200,
  /** Handle object configuration on a per-object basis, rather than per-class. */
  CLASS_PerObjectConfig = 0x00000400,
  /** Whether SetUpRuntimeReplicationData still needs to be called for this class */
  CLASS_ReplicationDataIsSetUp = 0x00000800,
  /** Class can be constructed from editinline New button. */
  CLASS_EditInlineNew = 0x00001000,
  /** Display properties in the editor without using categories. */
  CLASS_CollapseCategories = 0x00002000,
  /** Class is an interface **/
  CLASS_Interface = 0x00004000,
  /**  Do not export a constructor for this class, assuming it is in the cpptext **/
  CLASS_CustomConstructor = 0x00008000,
  /** all properties and functions in this class are const and should be exported as const */
  CLASS_Const = 0x00010000,
  /** Class flag indicating the class is having its layout changed, and therefore is not ready for a CDO to be created */
  CLASS_LayoutChanging = 0x00020000,
  /** Indicates that the class was created from blueprint source material */
  CLASS_CompiledFromBlueprint = 0x00040000,
  /** Indicates that only the bare minimum bits of this class should be DLL exported/imported */
  CLASS_MinimalAPI = 0x00080000,
  /** Indicates this class must be DLL exported/imported (along with all of it's members) */
  CLASS_RequiredAPI = 0x00100000,
  /** Indicates that references to this class default to instanced. Used to be subclasses of UComponent, but now can be any UObject */
  CLASS_DefaultToInstanced = 0x00200000,
  /** Indicates that the parent token stream has been merged with ours. */
  CLASS_TokenStreamAssembled = 0x00400000,
  /** Class has component properties. */
  CLASS_HasInstancedReference = 0x00800000,
  /** Don't show this class in the editor class browser or edit inline new menus. */
  CLASS_Hidden = 0x01000000,
  /** Don't save objects of this class when serializing */
  CLASS_Deprecated = 0x02000000,
  /** Class not shown in editor drop down for class selection */
  CLASS_HideDropDown = 0x04000000,
  /** Class settings are saved to <AppData>/..../Blah.ini (as opposed to CLASS_DefaultConfig) */
  CLASS_GlobalUserConfig = 0x08000000,
  /** Class was declared directly in C++ and has no boilerplate generated by UnrealHeaderTool */
  CLASS_Intrinsic = 0x10000000,
  /** Class has already been constructed (maybe in a previous DLL version before hot-reload). */
  CLASS_Constructed = 0x20000000,
  /** Indicates that object configuration will not check against ini base/defaults when serialized */
  CLASS_ConfigDoNotCheckDefaults = 0x40000000,
  /** Class has been consigned to oblivion as part of a blueprint recompile, and a newer version currently exists. */
  CLASS_NewerVersionExists = 0x80000000
}

//TODO: Currently unknown why or how this should work:
// https://docs.unrealengine.com/en-US/API/Runtime/CoreUObject/UObject/FFieldClass/index.html
export function FFieldPath(nameMap: NameMap) {
  return async function FFieldPathReader(reader: Reader) {

    // const toReturn = {
    // Name: await reader.read(FName(nameMap)),
    //Id = reader.ReadUInt64();
    //CastFlags = reader.ReadUInt64();
    // ClassFlags: await reader.read(UInt32) as EClassFlags
    // };

    return {
      Names: null
    }
  }
}
